# libcom1.db
#
# Params Required:
# DEVICE: EPICS PV Prefix
# PORT: asyn device port
#
# This file provides examples of using libcom1.proto to communicate with
# devices using libcom1. Specifically, it was used with an Arduino who which
# had several pins electrically connected
#
# Author(s): Ryan Yang (ryang2@mit.edu)
#
# Changlog:
# 2021/05/23 - Documentation
# 2021/01/25 - Added conversion from Volts to Raw value

record(bo, "$(DEVICE):ch1:setpoint") {
    field(DESC, "Set I/O pin 5")
    field(DTYP, "stream")
    field(OUT, "@libcom1.proto com1_setLink(d1) $(PORT)")
#    field(PRIO,"HIGH")
}

record(bo, "$(DEVICE):ch2:setpoint") {
    field(DESC, "Set I/O pin 30")
    field(DTYP, "stream")
    field(OUT, "@libcom1.proto com1_setLink(d2) $(PORT)")
#    field(PRIO,"HIGH")
}

record(ao, "$(DEVICE):ch3:setpoint") {
    field(DESC, "Set I/O pin 9")
    field(DTYP, "stream")
    field(OUT, "@libcom1.proto com1_setLink(a1) $(PORT)")
    field(DRVL, "0")
    field(DRVH, "5")
# This part converts from a scale of 0->5 to a scale of 0->255
# by doing: RVAL = (OVAL - EOFF)/(ESLO)
    field(LINR, "SLOPE")
    field(ESLO, "0.0196078431372549") # 1/51
    field(EOFF, "0")
    field(EGU, "V")
}

record(ai, "$(DEVICE):ch1:readback") {
    field(DESC, "Read I/O pin 10")
    field(DTYP, "stream")
    field(INP, "@libcom1.proto read_all_3val($(DEVICE):ch2:readback, $(DEVICE):ch3:readback) $(PORT)")
#    field(SCAN, "I/O Intr")
    field(SCAN, ".02 second")
#    field(PRIO, "LOW")
}

record(ai, "$(DEVICE):ch2:readback") {
    field(DESC, "Read I/O pin 40")
}

record(ai, "$(DEVICE):ch3:readback") {
    field(DESC, "Read I/O pin A0")
    field(PREC, 3)
}

